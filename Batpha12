-- Orb Combat Script (1 Hit Kill)
-- Load b·∫±ng executor: loadstring(game:HttpGet("RAW_LINK"))()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- C·∫•u h√¨nh
local ORB_COUNT = 6                -- s·ªë qu·∫£ c·∫ßu quay quanh
local ORBIT_RADIUS = 6             -- b√°n k√≠nh
local ORBIT_HEIGHT = 2             -- cao h∆°n HRP
local ORBIT_SPEED = 2.5            -- t·ªëc ƒë·ªô quay
local DETECT_RADIUS = 12           -- ph·∫°m vi ph√°t hi·ªán
local LAUNCH_SPEED = 90            -- t·ªëc ƒë·ªô lao t·ªõi
local RETURN_DELAY = 0.25          -- th·ªùi gian ch·ªù ƒë·ªÉ quay l·∫°i

-- L∆∞u orb
local orbs = {}
local enabled = false

-- T·∫°o GUI b·∫≠t/t·∫Øt
local gui = Instance.new("ScreenGui")
gui.Name = "OrbToggleGui"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0,140,0,44)
frame.Position = UDim2.new(0.02,0,0.85,0)
frame.BackgroundTransparency = 0.35
frame.Parent = gui

local button = Instance.new("TextButton")
button.Size = UDim2.new(1, -10, 1, -10)
button.Position = UDim2.new(0,5,0,5)
button.Text = "B·∫≠t Orbs"
button.Font = Enum.Font.SourceSans
button.TextSize = 20
button.Parent = frame

-- H√†m t·∫°o Orb
local function createOrb(index)
    local orb = Instance.new("Part")
    orb.Shape = Enum.PartType.Ball
    orb.Size = Vector3.new(1,1,1)
    orb.CanCollide = false
    orb.Anchored = false
    orb.Massless = true
    orb.CastShadow = false
    orb.Name = "PlayerOrb"
    orb.Parent = workspace

    local bv = Instance.new("BodyVelocity")
    bv.MaxForce = Vector3.new(1e5,1e5,1e5)
    bv.P = 1e4
    bv.Parent = orb

    orb:SetAttribute("Angle", (index-1) * (2*math.pi/ORB_COUNT))
    orb:SetAttribute("State", "orbit") -- orbit / launched
    orb:SetAttribute("Target", nil)

    orb.Touched:Connect(function(hit)
        if orb:GetAttribute("State") ~= "launched" then return end
        local char = hit:FindFirstAncestorOfClass("Model")
        if char and char:FindFirstChild("Humanoid") and char ~= player.Character then
            -- üëá 1 hit ch·∫øt + reset
            char.Humanoid.Health = 0 
            orb:SetAttribute("State", "orbit")
            orb:SetAttribute("Target", nil)
        end
    end)

    return orb
end

-- B·∫≠t/t·∫Øt
local function enableOrbs()
    if #orbs > 0 then return end
    for i = 1, ORB_COUNT do
        table.insert(orbs, createOrb(i))
    end
end

local function disableOrbs()
    for _, orb in ipairs(orbs) do
        if orb and orb.Parent then orb:Destroy() end
    end
    orbs = {}
end

-- N√∫t toggle
button.MouseButton1Click:Connect(function()
    enabled = not enabled
    if enabled then
        button.Text = "T·∫Øt Orbs"
        enableOrbs()
    else
        button.Text = "B·∫≠t Orbs"
        disableOrbs()
    end
end)

-- Update v√≤ng l·∫∑p
RunService.Heartbeat:Connect(function(dt)
    if not enabled then return end
    local char = player.Character
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    for i, orb in ipairs(orbs) do
        if orb and orb.Parent then
            local state = orb:GetAttribute("State")
            if state == "orbit" then
                local ang = orb:GetAttribute("Angle") + ORBIT_SPEED * dt
                orb:SetAttribute("Angle", ang)
                local offset = Vector3.new(math.cos(ang), 0, math.sin(ang)) * ORBIT_RADIUS
                local desiredPos = hrp.Position + Vector3.new(offset.X, ORBIT_HEIGHT, offset.Z)
                local bv = orb:FindFirstChildOfClass("BodyVelocity")
                if bv then
                    local dir = (desiredPos - orb.Position)
                    bv.Velocity = dir * 8
                end

                -- t√¨m m·ª•c ti√™u g·∫ßn
                local nearest, dist = nil, math.huge
                for _, other in ipairs(Players:GetPlayers()) do
                    if other ~= player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
                        local oh = other.Character.HumanoidRootPart
                        local d = (oh.Position - hrp.Position).magnitude
                        if d < DETECT_RADIUS and d < dist then
                            dist = d
                            nearest = oh
                        end
                    end
                end
                if nearest then
                    orb:SetAttribute("State", "launched")
                    orb:SetAttribute("Target", nearest)
                end

            elseif state == "launched" then
                local target = orb:GetAttribute("Target")
                if target and target.Parent then
                    local bv = orb:FindFirstChildOfClass("BodyVelocity")
                    if bv then
                        local dir = (target.Position - orb.Position)
                        if dir.Magnitude > 0 then
                            bv.Velocity = dir.Unit * LAUNCH_SPEED
                        end
                    end
                else
                    orb:SetAttribute("State", "orbit")
                    orb:SetAttribute("Target", nil)
                end
            end
        end
    end
end)
