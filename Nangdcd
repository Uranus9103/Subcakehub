-- APEX_Loader (PLACE THIS FILE IN ServerScriptService)
-- Single-file solution: server (DataStore + RemoteFunctions) + auto-create client LocalScript (UI + features)
-- EDIT the LINKS table below to your 12 "Get Key" links before use.

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local DataStoreService = game:GetService("DataStoreService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- ========== CONFIG ==========
local DATASTORE_NAME = "APEX_HUB_KEYS_V3"

-- <-- PUT YOUR 12 GET-KEY LINKS HERE (replace placeholders)
local LINKS = {
	"https://your-link-1.example",
	"https://your-link-2.example",
	"https://your-link-3.example",
	"https://your-link-4.example",
	"https://your-link-5.example",
	"https://your-link-6.example",
	"https://your-link-7.example",
	"https://your-link-8.example",
	"https://your-link-9.example",
	"https://your-link-10.example",
	"https://your-link-11.example",
	"https://your-link-12.example",
}

-- 12 rotating keys (edit values if you want different codes)
local ROTATING_KEYS = {
	"APEX-01-ALPHA","APEX-02-BRAVO","APEX-03-CHARLIE","APEX-04-DELTA",
	"APEX-05-ECHO","APEX-06-FOXTROT","APEX-07-GOLF","APEX-08-HOTEL",
	"APEX-09-INDIA","APEX-10-JULIET","APEX-11-KILO","APEX-12-LIMA",
}
-- ============================

local DS = DataStoreService:GetDataStore(DATASTORE_NAME)

-- ensure RemoteFunction helper
local function ensureRemote(name)
	local rf = ReplicatedStorage:FindFirstChild(name)
	if not rf then
		rf = Instance.new("RemoteFunction")
		rf.Name = name
		rf.Parent = ReplicatedStorage
	end
	return rf
end

local rfGetStatus = ensureRemote("APEX_GetKeyStatus")
local rfSubmitKey = ensureRemote("APEX_SubmitKey")
local rfGetLinks = ensureRemote("APEX_GetLinks")

-- Helpers: key index by UTC day
local function getCurrentDayIndex()
	return math.floor(os.time() / 86400)
end
local function getCurrentKeyIndex()
	local dayIndex = getCurrentDayIndex()
	return (dayIndex % #ROTATING_KEYS) + 1, dayIndex
end
local function getActiveKey()
	local idx, dayIndex = getCurrentKeyIndex()
	return ROTATING_KEYS[idx], idx, dayIndex
end

-- Server handlers
rfGetStatus.OnServerInvoke = function(player)
	local _, dayIndex = getCurrentKeyIndex()
	local ok, saved = pcall(function()
		return DS:GetAsync("apex_key:" .. player.UserId)
	end)
	if ok and saved and type(saved) == "table" and saved.lastValidDayIndex == dayIndex then
		return true
	end
	return false
end

rfSubmitKey.OnServerInvoke = function(player, keyText)
	if type(keyText) ~= "string" then
		return false, "Key không hợp lệ."
	end
	local activeKey, idx, dayIndex = getActiveKey()
	if keyText == activeKey then
		local ok, err = pcall(function()
			DS:SetAsync("apex_key:" .. player.UserId, { lastValidDayIndex = dayIndex })
		end)
		if ok then
			return true, "Xác thực thành công!"
		else
			warn("[APEX] DataStore SetAsync error: ", err)
			return false, "Lỗi lưu dữ liệu. Thử lại sau."
		end
	else
		return false, "Sai key! Mỗi 24h key sẽ đổi."
	end
end

rfGetLinks.OnServerInvoke = function(player)
	-- returns links table and current index
	local idx = (getCurrentKeyIndex())
	-- getCurrentKeyIndex returns idx,dayIndex
	local currentIdx = select(1, getCurrentKeyIndex())
	return LINKS, currentIdx
end

-- Create client LocalScript source (nice UI + features)
local clientSource = [[
-- APEX_Client (auto-generated by server)
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer

-- Remotes
local rfGetStatus = ReplicatedStorage:WaitForChild("APEX_GetKeyStatus")
local rfSubmitKey = ReplicatedStorage:WaitForChild("APEX_SubmitKey")
local rfGetLinks = ReplicatedStorage:WaitForChild("APEX_GetLinks")

-- UI helpers
local function new(parent, class, props)
	local inst = Instance.new(class)
	for k,v in pairs(props or {}) do inst[k] = v end
	inst.Parent = parent
	return inst
end
local function addCorner(inst, r) local c = Instance.new("UICorner", inst); c.CornerRadius = UDim.new(0, r or 12) end
local function addStroke(inst) local s = Instance.new("UIStroke", inst); s.Thickness = 1.6; s.Color = Color3.fromRGB(220,220,220); s.ApplyStrokeMode = Enum.ApplyStrokeMode.Border end
local function addGradient(inst, c1, c2) local g = Instance.new("UIGradient", inst); g.Color = ColorSequence.new{ColorSequenceKeypoint.new(0,c1), ColorSequenceKeypoint.new(1,c2)}; g.Rotation = 90 end
local function centerTween(inst) TweenService:Create(inst, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -inst.Size.X.Offset/2, 0.08, 0)}):Play() end

-- Root GUI
local gui = Instance.new("ScreenGui")
gui.Name = "APEX_HUB_GUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.Parent = player:WaitForChild("PlayerGui")

-- Small toggle (top-left)
local smallToggle = new(gui, "TextButton", {
	Size = UDim2.new(0,44,0,44),
	Position = UDim2.new(0, 12, 0, 12),
	Text = "☰",
	TextScaled = true,
	BackgroundTransparency = 0.12,
	AutoButtonColor = true
})
addCorner(smallToggle, 10); addStroke(smallToggle)

-- Fancy thank-you notice (appear then fade)
local notice = new(gui, "Frame", { Size = UDim2.new(0.6,0,0.09,0), Position = UDim2.new(0.2,0, -0.15,0), BackgroundTransparency = 0.06 })
addCorner(notice, 14); addStroke(notice); addGradient(notice, Color3.fromRGB(0,170,255), Color3.fromRGB(0,220,200))
new(notice, "TextLabel", { Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, Text = "✨ Cảm ơn đã sử dụng APEX HUB ✨", TextScaled = true, Font = Enum.Font.GothamBold, TextColor3 = Color3.fromRGB(255,255,255) })
TweenService:Create(notice, TweenInfo.new(0.8), {Position = UDim2.new(0.2,0,0.06,0)}):Play()
task.delay(3.2, function()
	TweenService:Create(notice, TweenInfo.new(0.8), {Position = UDim2.new(0.2,0,-0.15,0)}):Play()
	task.wait(1); notice:Destroy()
end)

-- KEY PANEL (center) -- draggable
local keyFrame = new(gui, "Frame", { Size = UDim2.new(0.46,0,0.44,0), Position = UDim2.new(0.27,0,0.28,0), BackgroundTransparency = 0.04, Active = true, Draggable = true })
addCorner(keyFrame, 14); addStroke(keyFrame); addGradient(keyFrame, Color3.fromRGB(60,60,200), Color3.fromRGB(10,160,190))
local title = new(keyFrame, "TextLabel", { Size = UDim2.new(1,0,0.16,0), Position = UDim2.new(0,0,0.03,0), BackgroundTransparency = 1, Text = "🔐 Nhập Key để mở APEX HUB", TextScaled = true, Font = Enum.Font.GothamBold, TextColor3 = Color3.fromRGB(255,255,255) })
local hint = new(keyFrame, "TextLabel", { Size = UDim2.new(0.9,0,0.08,0), Position = UDim2.new(0.05,0,0.18,0), BackgroundTransparency = 1, Text = "Mỗi key hợp lệ 24 giờ. Dùng Get Key để lấy link.", TextScaled = true, Font = Enum.Font.Gotham, TextColor3 = Color3.fromRGB(230,230,230) })

local inputBox = new(keyFrame, "TextBox", { Size = UDim2.new(0.84,0,0.16,0), Position = UDim2.new(0.08,0,0.32,0), PlaceholderText = "Nhập key...", TextScaled = true, Font = Enum.Font.Gotham })
addCorner(inputBox, 9); inputBox.BackgroundColor3 = Color3.fromRGB(45,45,45); inputBox.TextColor3 = Color3.fromRGB(255,255,255)

local confirmBtn = new(keyFrame, "TextButton", { Size = UDim2.new(0.36,0,0.18,0), Position = UDim2.new(0.08,0,0.56,0), Text = "✅ Xác nhận", TextScaled = true, Font = Enum.Font.GothamBold, BackgroundColor3 = Color3.fromRGB(38,170,95), TextColor3 = Color3.fromRGB(255,255,255) })
addCorner(confirmBtn, 9)
local getBtn = new(keyFrame, "TextButton", { Size = UDim2.new(0.36,0,0.18,0), Position = UDim2.new(0.56,0,0.56,0), Text = "🌐 Get Key", TextScaled = true, Font = Enum.Font.GothamBold, BackgroundColor3 = Color3.fromRGB(60,130,240), TextColor3 = Color3.fromRGB(255,255,255) })
addCorner(getBtn, 9)

local statusLabel = new(keyFrame, "TextLabel", { Size = UDim2.new(1,0,0.12,0), Position = UDim2.new(0,0,0.78,0), BackgroundTransparency = 1, Text = "", TextScaled = true, Font = Enum.Font.Gotham })

-- MAIN HUB (draggable)
local mainFrame = new(gui, "Frame", { Size = UDim2.new(0.25,0,0.34,0), Position = UDim2.new(0.69,0,0.58,0), BackgroundTransparency = 0.04, Active = true, Draggable = true })
addCorner(mainFrame, 12); addStroke(mainFrame); addGradient(mainFrame, Color3.fromRGB(0,200,200), Color3.fromRGB(0,120,180))
local titleMain = new(mainFrame, "TextLabel", { Size = UDim2.new(1,0,0.14,0), Position = UDim2.new(0,0,0.03,0), BackgroundTransparency = 1, Text = "APEX HUB", TextScaled = true, Font = Enum.Font.GothamBold })
local liftBtn = new(mainFrame, "TextButton", { Size = UDim2.new(0.84,0,0.22,0), Position = UDim2.new(0.08,0,0.22,0), Text = "⬆️ Nâng", TextScaled = true, Font = Enum.Font.GothamBold, BackgroundColor3 = Color3.fromRGB(200,60,60), TextColor3 = Color3.fromRGB(255,255,255) })
addCorner(liftBtn, 10)
local flyBtn = new(mainFrame, "TextButton", { Size = UDim2.new(0.84,0,0.22,0), Position = UDim2.new(0.08,0,0.56,0), Text = "🌌 Đi Trên Không", TextScaled = true, Font = Enum.Font.GothamBold, BackgroundColor3 = Color3.fromRGB(200,60,60), TextColor3 = Color3.fromRGB(255,255,255) })
addCorner(flyBtn, 10)

-- initial visibility: will be set after server check
keyFrame.Visible = false
mainFrame.Visible = false

-- tiny helper to show a temporary toast
local function toast(text, duration)
	local t = new(gui, "Frame", { Size = UDim2.new(0.28,0,0.06,0), Position = UDim2.new(0.5, -0.14 * gui.AbsoluteSize.X / gui.AbsoluteSize.X, 0.9, 0), BackgroundTransparency = 0.05 })
	addCorner(t, 8); addStroke(t); addGradient(t, Color3.fromRGB(60,60,60), Color3.fromRGB(40,40,40))
	local l = new(t, "TextLabel", { Size = UDim2.new(1,0,1,0), BackgroundTransparency = 1, Text = text, TextScaled = true, Font = Enum.Font.Gotham })
	task.delay(duration or 2, function() t:Destroy() end)
end

-- Ask server if player already has valid key
local function checkKeyStatus()
	local ok, res = pcall(function() return rfGetStatus:InvokeServer() end)
	if ok and res == true then
		return true
	end
	return false
end

local already = checkKeyStatus()
keyFrame.Visible = not already
mainFrame.Visible = already

-- smallToggle toggles visibility (show/hide whichever is available)
smallToggle.MouseButton1Click:Connect(function()
	if keyFrame.Visible then
		keyFrame.Visible = false
	else
		-- toggle main
		mainFrame.Visible = not mainFrame.Visible
	end
end)

-- Get Key click: ask server for LINKS and current index; copy to clipboard
getBtn.MouseButton1Click:Connect(function()
	local ok, a, b = pcall(function() return rfGetLinks:InvokeServer() end)
	-- rfGetLinks returns LINKS, index
	if ok then
		local links, idx = a, b
		-- if server returned packed differently, handle
		if type(links) == "table" and type(idx) == "number" then
			local link = links[idx] or links[1]
			pcall(function() setclipboard(link) end)
			statusLabel.Text = "Link đã copy vào clipboard!"
			toast("Link đã copy!",1.6)
		else
			-- fallback: if a is table but b is nil, maybe link is a[1] and idx=1
			if type(a) == "table" then
				local link = a[1] or ""
				pcall(function() setclipboard(link) end)
				statusLabel.Text = "Link đã copy (fallback)!"
				toast("Link đã copy!",1.6)
			else
				statusLabel.Text = "Không lấy được link."
			end
		end
	else
		statusLabel.Text = "Lỗi lấy link."
	end
end)

-- Confirm key: send to server
confirmBtn.MouseButton1Click:Connect(function()
	local txt = tostring(inputBox.Text or ""):gsub("^%s*(.-)%s*$","%1")
	if txt == "" then statusLabel.Text = "Nhập key trước đã!" return end
	local ok, result, message = pcall(function() return rfSubmitKey:InvokeServer(txt) end)
	-- pcall will return ok, then returned values from inner call (packed): result, message
	if ok and result == true then
		statusLabel.Text = "✔️ Thành công!"
		toast("Key hợp lệ. Đã mở APEX HUB", 1.2)
		task.wait(0.6)
		keyFrame.Visible = false
		mainFrame.Visible = true
	else
		-- show message if exists
		local show = message or result or "Sai key!"
		statusLabel.Text = tostring(show)
		toast(tostring(show), 1.4)
	end
end)

-- ========== FEATURES ==========

-- LIFT (speed 12)
local liftOn = false
local liftPart = nil
local liftOffset = 0
local liftSpeed = 12
local liftConn = nil

liftBtn.MouseButton1Click:Connect(function()
	liftOn = not liftOn
	if liftOn then
		liftBtn.Text = "⬆️ Nâng (ON)"
		liftBtn.BackgroundColor3 = Color3.fromRGB(50,200,80)
		liftOffset = 0
		local char = player.Character or player.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")
		liftPart = Instance.new("Part")
		liftPart.Size = Vector3.new(6,1,6)
		liftPart.Anchored = true
		liftPart.CanCollide = true
		liftPart.Transparency = 0.2
		liftPart.Color = Color3.fromRGB(60,200,80)
		liftPart.Name = "APEX_Lift"
		liftPart.Parent = workspace

		liftConn = RunService.RenderStepped:Connect(function(dt)
			if not liftOn or not liftPart or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
			local hrpPos = player.Character.HumanoidRootPart.Position
			liftOffset = liftOffset + (liftSpeed * dt)
			local target = hrpPos - Vector3.new(0,3,0) + Vector3.new(0, liftOffset, 0)
			-- smooth
			liftPart.CFrame = CFrame.new(target)
		end)
	else
		liftBtn.Text = "⬆️ Nâng"
		liftBtn.BackgroundColor3 = Color3.fromRGB(200,60,60)
		if liftConn then liftConn:Disconnect(); liftConn = nil end
		if liftPart then liftPart:Destroy(); liftPart = nil end
		liftOffset = 0
	end
end)

-- FLY platform (1s up / 1s down loop)
local flyOn = false
local flyPart = nil
local flyTimer = 0
local flyAmplitude = 2 -- studs
flyBtn.MouseButton1Click:Connect(function()
	flyOn = not flyOn
	if flyOn then
		flyBtn.Text = "🌌 Đi Trên Không (ON)"
		flyBtn.BackgroundColor3 = Color3.fromRGB(50,200,80)
		local char = player.Character or player.CharacterAdded:Wait()
		local hrp = char:WaitForChild("HumanoidRootPart")
		flyPart = Instance.new("Part")
		flyPart.Size = Vector3.new(8,1,8)
		flyPart.Anchored = true
		flyPart.CanCollide = true
		flyPart.Transparency = 0.2
		flyPart.Color = Color3.fromRGB(70,130,255)
		flyPart.Name = "APEX_FlyPlatform"
		flyPart.Parent = workspace
		flyTimer = 0

		-- update platform every frame with sine pattern period 2s => 1s up / 1s down
		local conn
		conn = RunService.RenderStepped:Connect(function(dt)
			if not flyOn or not flyPart or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
				if conn then conn:Disconnect() end
				return
			end
			flyTimer = flyTimer + dt
			local hrpPos = player.Character.HumanoidRootPart.Position
			local offsetY = math.sin(flyTimer * math.pi) * flyAmplitude -- period 2s
			local target = hrpPos - Vector3.new(0,3,0) + Vector3.new(0, offsetY, 0)
			-- position directly (smooth enough)
			flyPart.CFrame = CFrame.new(target)
		end)
	else
		flyBtn.Text = "🌌 Đi Trên Không"
		flyBtn.BackgroundColor3 = Color3.fromRGB(200,60,60)
		if flyPart then flyPart:Destroy(); flyPart = nil end
		flyTimer = 0
	end
end)

-- ensure panels update if server says key already valid (re-check every time character loads)
local function updateVisibility()
	local ok, res = pcall(function() return rfGetStatus:InvokeServer() end)
	if ok and res == true then
		keyFrame.Visible = false
		mainFrame.Visible = true
	else
		keyFrame.Visible = true
		mainFrame.Visible = false
	end
end
updateVisibility()

-- re-check when character respawns (in case DataStore changed)
player.CharacterAdded:Connect(function() task.wait(1); updateVisibility() end)
]]

-- Create or replace LocalScript in ReplicatedStorage
local existing = ReplicatedStorage:FindFirstChild("APEX_Client")
if existing then existing:Destroy() end
local clientLS = Instance.new("LocalScript")
clientLS.Name = "APEX_Client"
clientLS.Source = clientSource
clientLS.Parent = ReplicatedStorage

-- Clone LocalScript into each player's PlayerGui when they join (so it runs client-side)
Players.PlayerAdded:Connect(function(plr)
	-- Give some time for PlayerGui to exist
	plr.CharacterAppearanceLoaded:Wait()
	local rep = ReplicatedStorage:FindFirstChild("APEX_Client")
	if rep then
		local cloned = rep:Clone()
		cloned.Parent = plr:WaitForChild("PlayerGui")
	end
end)

-- For players already in server (Play solo in studio), clone immediately
for _, plr in ipairs(Players:GetPlayers()) do
	if plr.Character then
		local rep = ReplicatedStorage:FindFirstChild("APEX_Client")
		if rep and not plr:FindFirstChildOfClass("PlayerGui"):FindFirstChild("APEX_Client") then
			local cloned = rep:Clone()
			cloned.Parent = plr:WaitForChild("PlayerGui")
		end
	end
end

print("[APEX_Loader] Ready. Edit LINKS at top to your 12 get-key URLs.")
