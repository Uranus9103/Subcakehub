--[[
  APEX HUB • All-in-one (Speed + NPC Tracker)
  - Intro: "Cảm ơn vì đã sử dụng APEX HUB" (sang, tinh tế)
  - Speed UI (right): ▲ / ▼ ±5, tween mượt, tiếng nổ
  - NPC Tracker UI (left): Bật/Tắt; khi bật và có "Noobini Pizzanini" -> mũi tên 3D xoay xoay vàng trên đầu NPC
  - Viền gradient quay, tiêu đề APEX HUB RGB, kéo thả mượt
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- ====== CONFIG ======
local SPEED_DEFAULT = 16
local STEP = 5
local EXPLOSION_SFX_ID = 138186576
local NPC_NAME = "Noobini Pizzanini"
-- ====================

-- STATE
local currentSpeed = SPEED_DEFAULT
local arrowsEnabled = false  -- tracker ON/OFF
local trackedNPCs = {}       -- [Model] = Part(arrow)
local npcAddedConn, npcRemovedConn
local spinAngle = 0

-- ScreenGui root
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "APEX_HUB_Root"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- ===== Elegant Intro =====
local intro = Instance.new("TextLabel")
intro.Size = UDim2.new(0.6, 0, 0.12, 0)
intro.Position = UDim2.new(0.2, 0, 0.38, 0)
intro.BackgroundColor3 = Color3.fromRGB(12,12,12)
intro.BackgroundTransparency = 1
intro.Text = "Cảm ơn vì đã sử dụng APEX HUB"
intro.TextColor3 = Color3.fromRGB(255,255,255)
intro.Font = Enum.Font.Gotham
intro.TextScaled = true
intro.ZIndex = 100
intro.Parent = screenGui
Instance.new("UICorner", intro).CornerRadius = UDim.new(0, 14)
local introStroke = Instance.new("UIStroke"); introStroke.Parent = intro
introStroke.Color = Color3.fromRGB(255, 215, 128) -- vàng nhạt tinh tế
introStroke.Thickness = 1.6
introStroke.Transparency = 1

task.spawn(function()
	-- fade in
	for i=0, 1, 0.05 do
		intro.BackgroundTransparency = 0.6 - 0.6*i
		intro.TextTransparency = 1 - i
		introStroke.Transparency = 1 - i
		task.wait(0.02)
	end
	task.wait(1.2)
	-- fade out
	for i=0, 1, 0.05 do
		intro.BackgroundTransparency = 0 + 0.6*i
		intro.TextTransparency = i
		introStroke.Transparency = i
		task.wait(0.02)
	end
	intro:Destroy()
end)

-- ===== Utility: make pro frame with gradient border
local function makeProFrame(parent, size, pos)
	local outer = Instance.new("Frame")
	outer.Size = size
	outer.Position = pos
	outer.BackgroundColor3 = Color3.fromRGB(255,255,255)
	outer.BorderSizePixel = 0
	outer.Parent = parent
	Instance.new("UICorner", outer).CornerRadius = UDim.new(0, 12)

	local grad = Instance.new("UIGradient", outer)
	grad.Color = ColorSequence.new{
		ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)),
		ColorSequenceKeypoint.new(0.33, Color3.fromRGB(0, 255, 0)),
		ColorSequenceKeypoint.new(0.66, Color3.fromRGB(0, 0, 255)),
		ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))
	}
	grad.Rotation = 0
	task.spawn(function()
		while outer.Parent do
			grad.Rotation = (grad.Rotation + 1) % 360
			task.wait(0.03)
		end
	end)

	local inner = Instance.new("Frame")
	inner.Size = UDim2.new(1, -8, 1, -8)
	inner.Position = UDim2.new(0, 4, 0, 4)
	inner.BackgroundColor3 = Color3.fromRGB(15,15,15)
	inner.BorderSizePixel = 0
	inner.Parent = outer
	Instance.new("UICorner", inner).CornerRadius = UDimNew and UDimNew or UDim.new(0, 10)

	return outer, inner
end

-- ===== APEX HUB Title (RGB rainbow)
local function addApexTitle(parent, text)
	local title = Instance.new("TextLabel")
	title.Size = UDim2.new(1, -12, 0, 36)
	title.Position = UDim2.new(0, 6, 0, 4)
	title.BackgroundTransparency = 1
	title.Text = text
	title.Font = Enum.Font.GothamBold
	title.TextScaled = true
	title.TextColor3 = Color3.fromRGB(255,255,0)
	title.Parent = parent

	local stroke = Instance.new("UIStroke", title)
	stroke.Thickness = 2

	task.spawn(function()
		local h = 0
		while title.Parent do
			h = (h + 1) % 360
			local c = Color3.fromHSV(h/360, 1, 1)
			title.TextColor3 = c
			stroke.Color = c
			task.wait(0.03)
		end
	end)

	return title
end

-- ===== Speed UI (right)
local speedOuter, speedInner = makeProFrame(screenGui, UDim2.new(0, 230, 0, 130), UDim2.new(1, -250, 0, 20))
addApexTitle(speedInner, "APEX HUB")

local upBtn = Instance.new("TextButton")
upBtn.Size = UDim2.new(0.42, 0, 0, 48)
upBtn.Position = UDim2.new(0.05, 0, 0, 56)
upBtn.BackgroundTransparency = 1
upBtn.Text = "▲"
upBtn.TextColor3 = Color3.fromRGB(0,255,0)
upBtn.Font = Enum.Font.GothamBold
upBtn.TextScaled = true
upBtn.Parent = speedInner

local downBtn = Instance.new("TextButton")
downBtn.Size = UDim2.new(0.42, 0, 0, 48)
downBtn.Position = UDim2.new(0.53, 0, 0, 56)
downBtn.BackgroundTransparency = 1
downBtn.Text = "▼"
downBtn.TextColor3 = Color3.fromRGB(255,0,0)
downBtn.Font = Enum.Font.GothamBold
downBtn.TextScaled = true
downBtn.Parent = speedInner

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -12, 0, 20)
speedLabel.Position = UDim2.new(0, 6, 0, 40)
speedLabel.BackgroundTransparency = 1
speedLabel.Text = "Speed: "..tostring(currentSpeed)
speedLabel.TextColor3 = Color3.fromRGB(230,230,230)
speedLabel.Font = Enum.Font.GothamSemibold
speedLabel.TextScaled = true
speedLabel.Parent = speedInner

-- sound
local boom = Instance.new("Sound")
boom.SoundId = "rbxassetid://"..tostring(EXPLOSION_SFX_ID)
boom.Volume = 3
boom.Parent = screenGui

-- tween speed
local function tweenSpeed(target, duration)
	if not humanoid or not humanoid.Parent then return end
	local start = humanoid.WalkSpeed
	local t0 = tick()
	duration = duration or 0.35
	while true do
		local a = math.clamp((tick() - t0)/duration, 0, 1)
		local val = start + (target - start)*a
		if humanoid and humanoid.Parent then
			humanoid.WalkSpeed = val
		end
		if a >= 1 then break end
		RunService.RenderStepped:Wait()
	end
	currentSpeed = target
	speedLabel.Text = "Speed: "..math.floor(currentSpeed + 0.5)
end

local function setSpeed(newSpeed)
	newSpeed = math.max(0, newSpeed)
	boom:Play()
	tweenSpeed(newSpeed, 0.35)
end

upBtn.MouseButton1Click:Connect(function()
	setSpeed(currentSpeed + STEP)
end)
downBtn.MouseButton1Click:Connect(function()
	setSpeed(currentSpeed - STEP)
end)

-- keep speed after respawn
player.CharacterAdded:Connect(function(newChar)
	character = newChar
	humanoid = character:WaitForChild("Humanoid")
	humanoid.WalkSpeed = currentSpeed
end)

-- drag helper
local function enableDrag(frame)
	local dragging, dragStart, startPos = false, nil, nil
	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
		end
	end)
	UIS.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)
	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
end
enableDrag(speedOuter)

-- ===== NPC Tracker UI (left)
local trackerOuter, trackerInner = makeProFrame(screenGui, UDim2.new(0, 230, 0, 110), UDim2.new(0, 20, 0, 20))
local trackerTitle = addApexTitle(trackerInner, "NPC Tracker")

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(1, -12, 0, 54)
toggleBtn.Position = UDim2.new(0, 6, 0, 44)
toggleBtn.BackgroundTransparency = 1
toggleBtn.Text = "Bật (Theo dõi: "..NPC_NAME..")"
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextScaled = true
toggleBtn.Parent = trackerInner
enableDrag(trackerOuter)

-- ===== Arrow 3D manager =====
local function createArrowPart()
	local p = Instance.new("Part")
	p.Name = "APEX_Arrow"
	p.Anchored = true
	p.CanCollide = false
	p.Transparency = 0
	p.Material = Enum.Material.Neon
	p.Color = Color3.fromRGB(255, 225, 0) -- vàng nổi
	p.Size = Vector3.new(0.4, 0.8, 0.4)

	local mesh = Instance.new("SpecialMesh", p)
	mesh.MeshType = Enum.MeshType.Sphere -- mũi tròn sang; nếu muốn mũi nhọn: MeshType = Cone
	-- mesh.Scale = Vector3.new(1, 1.6, 1) -- uncomment nếu dùng Cone

	p.Parent = Workspace
	return p
end

local function attachArrowToNPC(model)
	if trackedNPCs[model] then return end
	-- ensure HRP
	local hrp = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
	if not hrp then
		-- chờ một chút nếu NPC đang load
		hrp = model:WaitForChild("HumanoidRootPart", 3)
	end
	if not hrp then return end

	local arrow = createArrowPart()
	trackedNPCs[model] = arrow
end

local function removeArrowFromNPC(model)
	local arrow = trackedNPCs[model]
	if arrow then
		arrow:Destroy()
		trackedNPCs[model] = nil
	end
end

local function clearAllArrows()
	for m, _ in pairs(trackedNPCs) do
		removeArrowFromNPC(m)
	end
end

-- Update loop: position + spin arrows
RunService.RenderStepped:Connect(function(dt)
	if not arrowsEnabled then return end
	spinAngle = (spinAngle + dt*3) % (math.pi*2)
	for model, arrow in pairs(trackedNPCs) do
		if not model or not model.Parent then
			removeArrowFromNPC(model)
		else
			local hrp = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
			if hrp and arrow and arrow.Parent then
				local offset = CFrame.new(0, 6, 0) * CFrame.Angles(0, spinAngle, 0)
				arrow.CFrame = hrp.CFrame * offset
			else
				removeArrowFromNPC(model)
			end
		end
	end
end)

-- Detect NPC add/remove
local function onChildAdded(obj)
	if not arrowsEnabled then return end
	if obj:IsA("Model") and obj.Name == NPC_NAME then
		attachArrowToNPC(obj)
	end
end
local function onChildRemoved(obj)
	if obj:IsA("Model") and obj.Name == NPC_NAME then
		removeArrowFromNPC(obj)
	end
end

local function enableTracker()
	if arrowsEnabled then return end
	arrowsEnabled = true
	toggleBtn.Text = "Tắt (Đang theo dõi: "..NPC_NAME..")"
	-- attach existing
	for _, obj in ipairs(Workspace:GetChildren()) do
		if obj:IsA("Model") and obj.Name == NPC_NAME then
			attachArrowToNPC(obj)
		end
	end
	-- listen future
	npcAddedConn = Workspace.ChildAdded:Connect(onChildAdded)
	npcRemovedConn = Workspace.ChildRemoved:Connect(onChildRemoved)
end

local function disableTracker()
	if not arrowsEnabled then return end
	arrowsEnabled = false
	toggleBtn.Text = "Bật (Theo dõi: "..NPC_NAME..")"
	if npcAddedConn then npcAddedConn:Disconnect() npcAddedConn = nil end
	if npcRemovedConn then npcRemovedConn:Disconnect() npcRemovedConn = nil end
	clearAllArrows()
end

toggleBtn.MouseButton1Click:Connect(function()
	if arrowsEnabled then
		disableTracker()
	else
		enableTracker()
	end
end)

-- Defaults
humanoid.WalkSpeed = currentSpeed
-- Tracker mặc định tắt để bạn chủ động bật
disableTracker()
