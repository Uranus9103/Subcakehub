local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- GUI (t·∫°o 1 l·∫ßn, reset kh√¥ng m·∫•t)
local gui = player:WaitForChild("PlayerGui"):FindFirstChild("LiftGui")
if not gui then
	gui = Instance.new("ScreenGui")
	gui.Name = "LiftGui"
	gui.ResetOnSpawn = false 
	gui.Parent = player:WaitForChild("PlayerGui")
end

-- Khung menu
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0,200,0,150)
frame.Position = UDim2.new(0.05,0,0.2,0)
frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
frame.Active = true
frame.Draggable = true -- ‚úÖ b·∫£ng di chuy·ªÉn ƒë∆∞·ª£c
frame.Parent = gui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0,12)
frameCorner.Parent = frame

-- N√∫t n√¢ng
local btnLift = Instance.new("TextButton")
btnLift.Size = UDim2.new(0.9,0,0,40)
btnLift.Position = UDim2.new(0.05,0,0.15,0)
btnLift.Text = "‚¨ÜÔ∏è N√¢ng OFF"
btnLift.TextScaled = true
btnLift.BackgroundColor3 = Color3.fromRGB(200,50,50)
btnLift.TextColor3 = Color3.fromRGB(255,255,255)
btnLift.Font = Enum.Font.GothamBold
btnLift.Parent = frame

local cornerLift = Instance.new("UICorner")
cornerLift.CornerRadius = UDim.new(0,10)
cornerLift.Parent = btnLift

-- N√∫t ƒëi tr√™n kh√¥ng
local btnFly = Instance.new("TextButton")
btnFly.Size = UDim2.new(0.9,0,0,40)
btnFly.Position = UDim2.new(0.05,0,0.55,0)
btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng OFF"
btnFly.TextScaled = true
btnFly.BackgroundColor3 = Color3.fromRGB(200,50,50)
btnFly.TextColor3 = Color3.fromRGB(255,255,255)
btnFly.Font = Enum.Font.GothamBold
btnFly.Parent = frame

local cornerFly = Instance.new("UICorner")
cornerFly.CornerRadius = UDim.new(0,10)
cornerFly.Parent = btnFly

-- Bi·∫øn
local liftPart = nil
local flyPart = nil
local liftEnabled = false
local flyEnabled = false
local connection = nil
local flyConnection = nil
local speed = 12 -- t·ªëc ƒë·ªô n√¢ng
local flySpeed = 3 -- t·ªëc ƒë·ªô ƒëi tr√™n kh√¥ng
local flyHeight = 3 -- v·ªã tr√≠ ban ƒë·∫ßu s√†n bay d∆∞·ªõi ch√¢n
local goingUp = true
local switchTime = 1
local flyTimer = 0
local flyRange = 1.5 -- ƒë·ªô n√¢ng/h·∫° √≠t (ch·ªâ 1.5 studs)

-- Toggle n√¢ng
local function toggleLift()
	liftEnabled = not liftEnabled
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if liftEnabled then
		liftPart = Instance.new("Part")
		liftPart.Size = Vector3.new(6,1,6)
		liftPart.Anchored = true
		liftPart.CanCollide = true
		liftPart.Color = Color3.fromRGB(50,200,50)
		liftPart.Transparency = 0.2
		liftPart.Name = "LiftBlock"
		liftPart.Parent = workspace

		btnLift.Text = "‚¨ÜÔ∏è N√¢ng ON"
		btnLift.BackgroundColor3 = Color3.fromRGB(50,200,50)

		connection = RunService.RenderStepped:Connect(function(dt)
			if hrp and liftPart and liftEnabled then
				local pos = hrp.Position - Vector3.new(0,3,0)
				liftPart.CFrame = CFrame.new(pos) * CFrame.new(0, speed*dt, 0)
			end
		end)
	else
		if liftPart then
			liftPart:Destroy()
			liftPart = nil
		end
		if connection then
			connection:Disconnect()
			connection = nil
		end
		btnLift.Text = "‚¨ÜÔ∏è N√¢ng OFF"
		btnLift.BackgroundColor3 = Color3.fromRGB(200,50,50)
	end
end

-- Toggle ƒëi tr√™n kh√¥ng
local function toggleFly()
	flyEnabled = not flyEnabled
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if flyEnabled then
		flyPart = Instance.new("Part")
		flyPart.Size = Vector3.new(8,1,8)
		flyPart.Anchored = true
		flyPart.CanCollide = true
		flyPart.Color = Color3.fromRGB(100,150,250)
		flyPart.Transparency = 0.2
		flyPart.Name = "FlyPlatform"
		flyPart.Parent = workspace

		-- xu·∫•t hi·ªán ngay d∆∞·ªõi ch√¢n
		flyPart.CFrame = CFrame.new(hrp.Position - Vector3.new(0, flyHeight, 0))

		btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng ON"
		btnFly.BackgroundColor3 = Color3.fromRGB(50,200,50)

		goingUp = true
		flyTimer = 0

		flyConnection = RunService.RenderStepped:Connect(function(dt)
			if hrp and flyPart and flyEnabled then
				flyTimer = flyTimer + dt
				if flyTimer >= switchTime then
					goingUp = not goingUp
					flyTimer = 0
				end

				-- V·ªã tr√≠ c∆° b·∫£n d∆∞·ªõi ch√¢n
				local basePos = hrp.Position - Vector3.new(0, flyHeight, 0)

				-- N√¢ng/h·∫° √≠t (¬± flyRange studs)
				local offset = goingUp and flyRange or -flyRange

				flyPart.CFrame = flyPart.CFrame:Lerp(CFrame.new(basePos + Vector3.new(0, offset, 0)), 0.05)
			end
		end)
	else
		if flyPart then
			flyPart:Destroy()
			flyPart = nil
		end
		if flyConnection then
			flyConnection:Disconnect()
			flyConnection = nil
		end
		btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng OFF"
		btnFly.BackgroundColor3 = Color3.fromRGB(200,50,50)
	end
end

-- K·∫øt n·ªëi
btnLift.MouseButton1Click:Connect(toggleLift)
btnFly.MouseButton1Click:Connect(toggleFly)
