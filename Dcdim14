local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

-- GUI
local gui = player:WaitForChild("PlayerGui"):FindFirstChild("LiftGui")
if not gui then
	gui = Instance.new("ScreenGui")
	gui.Name = "LiftGui"
	gui.ResetOnSpawn = false -- gi·ªØ khi reset
	gui.Parent = player:WaitForChild("PlayerGui")
end

-- Khung menu
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0,220,0,180)
frame.Position = UDim2.new(0.05,0,0.2,0)
frame.BackgroundColor3 = Color3.fromRGB(0,0,0)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

-- Vi·ªÅn c·∫ßu v·ªìng
local UIStroke = Instance.new("UIStroke")
UIStroke.Thickness = 3
UIStroke.Parent = frame

task.spawn(function()
	while true do
		for hue=0,1,0.01 do
			UIStroke.Color = Color3.fromHSV(hue,1,1)
			task.wait(0.05)
		end
	end
end)

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0,12)
frameCorner.Parent = frame

-- H√†m t·∫°o button
local function createButton(name, posY, color)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.9,0,0,40)
	btn.Position = UDim2.new(0.05,0,posY,0)
	btn.Text = name
	btn.TextScaled = true
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Font = Enum.Font.GothamBold
	btn.Parent = frame
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0,10)
	corner.Parent = btn
	return btn
end

local btnFly = createButton("üõë ƒêi Tr√™n Kh√¥ng",0.2,Color3.fromRGB(50,200,50))
local btnLift = createButton("‚¨ÜÔ∏è N√¢ng",0.5,Color3.fromRGB(50,100,200))

-- Th√¥ng b√°o
local function showNotice(text)
	local notice = Instance.new("TextLabel")
	notice.Size = UDim2.new(0.4,0,0.08,0)
	notice.Position = UDim2.new(0.3,0,0.05,0)
	notice.BackgroundTransparency = 0.2
	notice.BackgroundColor3 = Color3.fromRGB(30,30,30)
	notice.Text = text
	notice.TextScaled = true
	notice.Font = Enum.Font.GothamBold
	notice.TextColor3 = Color3.fromRGB(255,255,255)
	notice.Parent = gui
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0,10)
	corner.Parent = notice
	local stroke = Instance.new("UIStroke")
	stroke.Thickness = 2
	stroke.Color = Color3.fromRGB(255,255,0)
	stroke.Parent = notice
	game:GetService("Debris"):AddItem(notice,6)
end

-- ==== ƒêI TR√äN KH√îNG (loop 6s) ====
local flyPart = nil
local flyEnabled = false
local flyConnection = nil
local flyHeight = 3
local goingUp = true
local switchTime = 1
local flyTimer = 0
local flyRange = 1

local function startFlyLoop()
	if flyEnabled then return end
	flyEnabled = true
	btnFly.BackgroundColor3 = Color3.fromRGB(50,200,50)

	task.spawn(function()
		while flyEnabled do
			local character = player.Character or player.CharacterAdded:Wait()
			local hrp = character:WaitForChild("HumanoidRootPart")

			flyPart = Instance.new("Part")
			flyPart.Size = Vector3.new(8,1,8)
			flyPart.Anchored = true
			flyPart.CanCollide = true
			flyPart.Color = Color3.fromRGB(100,150,250)
			flyPart.Transparency = 0.2
			flyPart.Name = "FlyPlatform"
			flyPart.Parent = workspace
			flyPart.CFrame = CFrame.new(hrp.Position - Vector3.new(0, flyHeight, 0))

			goingUp = true
			flyTimer = 0

			flyConnection = RunService.RenderStepped:Connect(function(dt)
				if hrp and flyPart then
					flyTimer = flyTimer + dt
					if flyTimer >= switchTime then
						goingUp = not goingUp
						flyTimer = 0
					end

					local basePos = hrp.Position - Vector3.new(0, flyHeight, 0)
					local offset = goingUp and flyRange or -flyRange
					flyPart.CFrame = CFrame.new(basePos + Vector3.new(0, offset, 0))
				end
			end)

			task.wait(6)

			if flyConnection then flyConnection:Disconnect() end
			if flyPart then flyPart:Destroy() end
			flyPart = nil
			showNotice("‚ö†Ô∏è ƒêi tr√™n kh√¥ng t·ª± reset, b·∫≠t l·∫°i nhanh ‚ö†Ô∏è")

			task.wait(0.1)
		end
	end)
end

btnFly.MouseButton1Click:Connect(function()
	if flyEnabled then
		flyEnabled = false
		if flyConnection then flyConnection:Disconnect() end
		if flyPart then flyPart:Destroy() end
		btnFly.BackgroundColor3 = Color3.fromRGB(200,50,50)
	else
		startFlyLoop()
	end
end)

-- ==== N√öT N√ÇNG (theo ng∆∞·ªùi ch∆°i) ====
local lifting = false
local liftPart = nil
local liftConnection = nil

local function startLift()
	if lifting then return end
	lifting = true
	btnLift.BackgroundColor3 = Color3.fromRGB(100,200,250)

	task.spawn(function()
		local character = player.Character or player.CharacterAdded:Wait()
		local hrp = character:WaitForChild("HumanoidRootPart")

		liftPart = Instance.new("Part")
		liftPart.Size = Vector3.new(8,1,8)
		liftPart.Anchored = true
		liftPart.CanCollide = true
		liftPart.Color = Color3.fromRGB(250,200,100)
		liftPart.Name = "LiftPlatform"
		liftPart.Parent = workspace

		liftConnection = RunService.RenderStepped:Connect(function(dt)
			if hrp and liftPart then
				-- Lu√¥n ƒëi theo ch√¢n
				local basePos = hrp.Position - Vector3.new(0,3,0)
				-- T·ªëc n√¢ng 17
				liftPart.CFrame = liftPart.CFrame:Lerp(CFrame.new(basePos + Vector3.new(0,17*dt,0)),0.5)
			end
		end)
	end)
end

btnLift.MouseButton1Click:Connect(function()
	if lifting then
		lifting = false
		if liftConnection then liftConnection:Disconnect() end
		if liftPart then liftPart:Destroy() end
		btnLift.BackgroundColor3 = Color3.fromRGB(50,100,200)
	else
		startLift()
	end
end)

-- Reset nh√¢n v·∫≠t v·∫´n gi·ªØ GUI v√† ch·ª©c nƒÉng
player.CharacterAdded:Connect(function()
	if lifting then
		startLift()
	end
	if flyEnabled then
		startFlyLoop()
	end
end)
