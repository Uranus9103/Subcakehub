local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- ‚öôÔ∏è BI·∫æN T·ªêC ƒê·ªò
local LIFT_UP_SPEED = 0.6 -- t·ªëc ƒë·ªô n√¢ng
local LIFT_DOWN_SPEED = 0.4 -- t·ªëc ƒë·ªô h·∫° (√≠t h∆°n ƒë·ªÉ ch·∫≠m h∆°n)
local FLY_FOLLOW_HEIGHT = 3 -- kho·∫£ng c√°ch platform d∆∞·ªõi ch√¢n

-- GUI (kh√¥ng m·∫•t khi reset)
local gui = player:WaitForChild("PlayerGui"):FindFirstChild("LiftGui")
if not gui then
	gui = Instance.new("ScreenGui")
	gui.Name = "LiftGui"
	gui.ResetOnSpawn = false
	gui.Parent = player:WaitForChild("PlayerGui")
end

-- Frame ch√≠nh
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 170)
frame.Position = UDim2.new(0.05, 0, 0.25, 0)
frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

-- Vi·ªÅn c·∫ßu v·ªìng üåà
local uiStroke = Instance.new("UIStroke")
uiStroke.Thickness = 3
uiStroke.Parent = frame

task.spawn(function()
	while true do
		for i = 0, 1, 0.01 do
			uiStroke.Color = Color3.fromHSV(i, 1, 1)
			task.wait(0.05)
		end
	end
end)

-- N√∫t n√¢ng
local btnLift = Instance.new("TextButton")
btnLift.Size = UDim2.new(0.9, 0, 0, 45)
btnLift.Position = UDim2.new(0.05, 0, 0.15, 0)
btnLift.Text = "‚¨ÜÔ∏è N√¢ng OFF"
btnLift.TextScaled = true
btnLift.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
btnLift.TextColor3 = Color3.fromRGB(255, 255, 255)
btnLift.Font = Enum.Font.GothamBold
btnLift.Parent = frame

local cornerLift = Instance.new("UICorner")
cornerLift.CornerRadius = UDim.new(0, 10)
cornerLift.Parent = btnLift

-- N√∫t ƒëi tr√™n kh√¥ng
local btnFly = Instance.new("TextButton")
btnFly.Size = UDim2.new(0.9, 0, 0, 45)
btnFly.Position = UDim2.new(0.05, 0, 0.55, 0)
btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng OFF"
btnFly.TextScaled = true
btnFly.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
btnFly.TextColor3 = Color3.fromRGB(255, 255, 255)
btnFly.Font = Enum.Font.GothamBold
btnFly.Parent = frame

local cornerFly = Instance.new("UICorner")
cornerFly.CornerRadius = UDim.new(0, 10)
cornerFly.Parent = btnFly

-- Th√¥ng b√°o ‚ö†Ô∏è
local notifyLabel = Instance.new("TextLabel")
notifyLabel.Size = UDim2.new(0.5, 0, 0, 50)
notifyLabel.Position = UDim2.new(0.25, 0, 0.05, 0)
notifyLabel.BackgroundTransparency = 0.3
notifyLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
notifyLabel.Text = ""
notifyLabel.TextScaled = true
notifyLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
notifyLabel.Font = Enum.Font.GothamBold
notifyLabel.Visible = false
notifyLabel.Parent = gui

local notifyCorner = Instance.new("UICorner")
notifyCorner.CornerRadius = UDim.new(0, 12)
notifyCorner.Parent = notifyLabel

-- Bi·∫øn
local liftEnabled = false
local flyEnabled = false
local connection = nil
local flyConnection = nil
local notifyLoop = nil
local flyPart = nil

-- Toggle n√¢ng
local function toggleLift()
	liftEnabled = not liftEnabled
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if liftEnabled then
		btnLift.Text = "‚¨ÜÔ∏è N√¢ng ON"
		btnLift.BackgroundColor3 = Color3.fromRGB(50, 200, 50)

		connection = RunService.RenderStepped:Connect(function()
			if UIS:IsKeyDown(Enum.KeyCode.Space) then
				hrp.CFrame = hrp.CFrame + Vector3.new(0, LIFT_UP_SPEED, 0)
			elseif UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
				hrp.CFrame = hrp.CFrame - Vector3.new(0, LIFT_DOWN_SPEED, 0)
			end
		end)

	else
		if connection then connection:Disconnect() end
		btnLift.Text = "‚¨ÜÔ∏è N√¢ng OFF"
		btnLift.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
	end
end

-- Toggle ƒëi tr√™n kh√¥ng
local function toggleFly()
	flyEnabled = not flyEnabled
	local character = player.Character or player.CharacterAdded:Wait()
	local hrp = character:WaitForChild("HumanoidRootPart")

	if flyEnabled then
		flyPart = Instance.new("Part")
		flyPart.Size = Vector3.new(8, 1, 8)
		flyPart.Anchored = true
		flyPart.CanCollide = true
		flyPart.Color = Color3.fromRGB(100, 150, 250)
		flyPart.Transparency = 0.2
		flyPart.Name = "FlyPlatform"
		flyPart.Parent = workspace

		btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng ON"
		btnFly.BackgroundColor3 = Color3.fromRGB(50, 200, 50)

		flyConnection = RunService.RenderStepped:Connect(function()
			if hrp and flyPart then
				local targetPos = hrp.Position - Vector3.new(0, FLY_FOLLOW_HEIGHT, 0)
				flyPart.CFrame = flyPart.CFrame:Lerp(CFrame.new(targetPos), 0.2)
			end
		end)

	else
		if flyPart then flyPart:Destroy() end
		if flyConnection then flyConnection:Disconnect() end
		btnFly.Text = "üõë ƒêi Tr√™n Kh√¥ng OFF"
		btnFly.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
	end
end

-- Th√¥ng b√°o khi b·∫≠t n√∫t
local function startNotifyLoop()
	if notifyLoop then return end
	notifyLoop = task.spawn(function()
		while liftEnabled or flyEnabled do
			notifyLabel.Text = "‚ö†Ô∏è Vui l√≤ng t·∫Øt b·∫≠t l·∫°i nhanh ƒë·ªÉ kh√¥ng b·ªã l·ªói ‚ö†Ô∏è"
			notifyLabel.Visible = true
			task.wait(6) -- hi·ªÉn th·ªã 6s
			notifyLabel.Visible = false
			task.wait(4) -- ngh·ªâ 4s r·ªìi l·∫∑p l·∫°i
		end
		notifyLoop = nil
	end)
end

btnLift.MouseButton1Click:Connect(function()
	toggleLift()
	if liftEnabled then startNotifyLoop() end
end)

btnFly.MouseButton1Click:Connect(function()
	toggleFly()
	if flyEnabled then startNotifyLoop() end
end)
